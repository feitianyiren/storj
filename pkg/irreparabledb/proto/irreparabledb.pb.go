// Code generated by protoc-gen-go. DO NOT EDIT.
// source: irreparabledb.proto

package irreparabledb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateResponse_Status int32

const (
	CreateResponse_FAIL CreateResponse_Status = 0
	CreateResponse_OK   CreateResponse_Status = 1
)

var CreateResponse_Status_name = map[int32]string{
	0: "FAIL",
	1: "OK",
}
var CreateResponse_Status_value = map[string]int32{
	"FAIL": 0,
	"OK":   1,
}

func (x CreateResponse_Status) String() string {
	return proto.EnumName(CreateResponse_Status_name, int32(x))
}
func (CreateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_irreparabledb_29d6bba470a94276, []int{2, 0}
}

// RmtSegInfo is info about a single  stored in the irreparable db
type RmtSegInfo struct {
	RmtSegKey                []byte   `protobuf:"bytes,1,opt,name=rmt_seg_key,json=rmtSegKey,proto3" json:"rmt_seg_key,omitempty"`
	RmtSegVal                []byte   `protobuf:"bytes,2,opt,name=rmt_seg_val,json=rmtSegVal,proto3" json:"rmt_seg_val,omitempty"`
	RmtSegLostPiecesCount    int64    `protobuf:"varint,3,opt,name=rmt_seg_lost_pieces_count,json=rmtSegLostPiecesCount,proto3" json:"rmt_seg_lost_pieces_count,omitempty"`
	RmtSegRepairUnixSec      int64    `protobuf:"varint,4,opt,name=rmt_seg_repair_unix_sec,json=rmtSegRepairUnixSec,proto3" json:"rmt_seg_repair_unix_sec,omitempty"`
	RmtSegRepairAttemptCount int64    `protobuf:"varint,5,opt,name=rmt_seg_repair_attempt_count,json=rmtSegRepairAttemptCount,proto3" json:"rmt_seg_repair_attempt_count,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *RmtSegInfo) Reset()         { *m = RmtSegInfo{} }
func (m *RmtSegInfo) String() string { return proto.CompactTextString(m) }
func (*RmtSegInfo) ProtoMessage()    {}
func (*RmtSegInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_irreparabledb_29d6bba470a94276, []int{0}
}
func (m *RmtSegInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RmtSegInfo.Unmarshal(m, b)
}
func (m *RmtSegInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RmtSegInfo.Marshal(b, m, deterministic)
}
func (dst *RmtSegInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RmtSegInfo.Merge(dst, src)
}
func (m *RmtSegInfo) XXX_Size() int {
	return xxx_messageInfo_RmtSegInfo.Size(m)
}
func (m *RmtSegInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RmtSegInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RmtSegInfo proto.InternalMessageInfo

func (m *RmtSegInfo) GetRmtSegKey() []byte {
	if m != nil {
		return m.RmtSegKey
	}
	return nil
}

func (m *RmtSegInfo) GetRmtSegVal() []byte {
	if m != nil {
		return m.RmtSegVal
	}
	return nil
}

func (m *RmtSegInfo) GetRmtSegLostPiecesCount() int64 {
	if m != nil {
		return m.RmtSegLostPiecesCount
	}
	return 0
}

func (m *RmtSegInfo) GetRmtSegRepairUnixSec() int64 {
	if m != nil {
		return m.RmtSegRepairUnixSec
	}
	return 0
}

func (m *RmtSegInfo) GetRmtSegRepairAttemptCount() int64 {
	if m != nil {
		return m.RmtSegRepairAttemptCount
	}
	return 0
}

// CreateRequest is a request message for the Create rpc call
type CreateRequest struct {
	Rmtseginfo           *RmtSegInfo `protobuf:"bytes,1,opt,name=rmtseginfo,proto3" json:"rmtseginfo,omitempty"`
	APIKey               []byte      `protobuf:"bytes,2,opt,name=APIKey,proto3" json:"APIKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_irreparabledb_29d6bba470a94276, []int{1}
}
func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(dst, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetRmtseginfo() *RmtSegInfo {
	if m != nil {
		return m.Rmtseginfo
	}
	return nil
}

func (m *CreateRequest) GetAPIKey() []byte {
	if m != nil {
		return m.APIKey
	}
	return nil
}

// CreateResponse is a response message for the Create rpc call
type CreateResponse struct {
	Status               CreateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=irreparabledb.CreateResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_irreparabledb_29d6bba470a94276, []int{2}
}
func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (dst *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(dst, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetStatus() CreateResponse_Status {
	if m != nil {
		return m.Status
	}
	return CreateResponse_FAIL
}

func init() {
	proto.RegisterType((*RmtSegInfo)(nil), "irreparabledb.RmtSegInfo")
	proto.RegisterType((*CreateRequest)(nil), "irreparabledb.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "irreparabledb.CreateResponse")
	proto.RegisterEnum("irreparabledb.CreateResponse_Status", CreateResponse_Status_name, CreateResponse_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IrreparableDBClient is the client API for IrreparableDB service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IrreparableDBClient interface {
	// Create a db entry for the provided segment info
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
}

type irreparableDBClient struct {
	cc *grpc.ClientConn
}

func NewIrreparableDBClient(cc *grpc.ClientConn) IrreparableDBClient {
	return &irreparableDBClient{cc}
}

func (c *irreparableDBClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/irreparabledb.IrreparableDB/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IrreparableDBServer is the server API for IrreparableDB service.
type IrreparableDBServer interface {
	// Create a db entry for the provided segment info
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
}

func RegisterIrreparableDBServer(s *grpc.Server, srv IrreparableDBServer) {
	s.RegisterService(&_IrreparableDB_serviceDesc, srv)
}

func _IrreparableDB_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IrreparableDBServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/irreparabledb.IrreparableDB/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IrreparableDBServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IrreparableDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "irreparabledb.IrreparableDB",
	HandlerType: (*IrreparableDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _IrreparableDB_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "irreparabledb.proto",
}

func init() { proto.RegisterFile("irreparabledb.proto", fileDescriptor_irreparabledb_29d6bba470a94276) }

var fileDescriptor_irreparabledb_29d6bba470a94276 = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0x4f, 0xea, 0x40,
	0x10, 0xc6, 0x5f, 0x81, 0xd7, 0xbc, 0x37, 0x08, 0x21, 0x4b, 0xd4, 0x42, 0xd0, 0x90, 0xc6, 0x03,
	0x27, 0x0e, 0xe8, 0x41, 0x13, 0x63, 0x82, 0xa8, 0x49, 0x03, 0x89, 0xa4, 0x44, 0xae, 0x4d, 0x5b,
	0x07, 0x52, 0x6d, 0xbb, 0x75, 0x77, 0x6a, 0xe0, 0x7f, 0xf7, 0x60, 0xd8, 0x96, 0x50, 0x48, 0xf4,
	0xb8, 0xf3, 0x7d, 0xbf, 0xf9, 0x66, 0x26, 0x0b, 0xcd, 0x40, 0x08, 0x4c, 0x5c, 0xe1, 0x7a, 0x21,
	0xbe, 0x7a, 0xfd, 0x44, 0x70, 0xe2, 0xac, 0xb6, 0x57, 0x34, 0xbf, 0x34, 0x00, 0x3b, 0xa2, 0x19,
	0x2e, 0xad, 0x78, 0xc1, 0xd9, 0x39, 0x54, 0x45, 0x44, 0x8e, 0xc4, 0xa5, 0xf3, 0x8e, 0x6b, 0x43,
	0xeb, 0x6a, 0xbd, 0x23, 0xfb, 0xbf, 0x50, 0x86, 0x31, 0xae, 0x8b, 0xfa, 0xa7, 0x1b, 0x1a, 0xa5,
	0xa2, 0x3e, 0x77, 0x43, 0x76, 0x0d, 0xad, 0xad, 0x1e, 0x72, 0x49, 0x4e, 0x12, 0xa0, 0x8f, 0xd2,
	0xf1, 0x79, 0x1a, 0x93, 0x51, 0xee, 0x6a, 0xbd, 0xb2, 0x7d, 0x9c, 0xb9, 0x27, 0x5c, 0xd2, 0x54,
	0xa9, 0xa3, 0x8d, 0xc8, 0xae, 0xe0, 0x74, 0x4b, 0x6e, 0xe6, 0x0b, 0x84, 0x93, 0xc6, 0xc1, 0xca,
	0x91, 0xe8, 0x1b, 0x15, 0xc5, 0x35, 0x33, 0xce, 0x56, 0xe2, 0x4b, 0x1c, 0xac, 0x66, 0xe8, 0xb3,
	0x3b, 0xe8, 0x1c, 0x50, 0x2e, 0x11, 0x46, 0x09, 0xe5, 0x91, 0x7f, 0x15, 0x6a, 0x14, 0xd1, 0x61,
	0x66, 0x50, 0xa9, 0xa6, 0x07, 0xb5, 0x91, 0x40, 0x97, 0xd0, 0xc6, 0x8f, 0x14, 0x25, 0xb1, 0x1b,
	0x00, 0x11, 0x91, 0xc4, 0x65, 0x10, 0x2f, 0xb8, 0xda, 0xbf, 0x3a, 0x68, 0xf5, 0xf7, 0x0f, 0xb9,
	0xbb, 0x97, 0x5d, 0x30, 0xb3, 0x13, 0xd0, 0x87, 0x53, 0x6b, 0x8c, 0xeb, 0xfc, 0x2c, 0xf9, 0xcb,
	0x7c, 0x83, 0xfa, 0x36, 0x43, 0x26, 0x3c, 0x96, 0xc8, 0x6e, 0x41, 0x97, 0xe4, 0x52, 0x2a, 0x55,
	0x40, 0x7d, 0x70, 0x71, 0x10, 0xb0, 0x6f, 0xef, 0xcf, 0x94, 0xd7, 0xce, 0x19, 0xb3, 0x0d, 0x7a,
	0x56, 0x61, 0xff, 0xa0, 0xf2, 0x34, 0xb4, 0x26, 0x8d, 0x3f, 0x4c, 0x87, 0xd2, 0xf3, 0xb8, 0xa1,
	0x0d, 0xe6, 0x50, 0xb3, 0x76, 0xad, 0x1e, 0xee, 0xd9, 0x23, 0xe8, 0x59, 0x37, 0xd6, 0xf9, 0x21,
	0x44, 0xed, 0xdd, 0x3e, 0xfb, 0x75, 0x04, 0x4f, 0x57, 0x9f, 0xe7, 0xf2, 0x3b, 0x00, 0x00, 0xff,
	0xff, 0x1c, 0xc4, 0xe6, 0x49, 0x53, 0x02, 0x00, 0x00,
}
